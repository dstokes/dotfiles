# change prefix
unbind C-b
set-option -g prefix C-a
bind-key a send-prefix

# zsh
set-option -g default-shell /bin/zsh

# reload config
bind r source-file ~/.tmux.conf

# use mouse to select panes/windows/etc.
set-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g mouse-resize-pane on

# fix colors
set -g default-terminal "screen-256color"
set-window-option -g utf8 on

# remove key delay
set-option -sg escape-time 0

# use 1 instead of 0 for the first window/pane
set-option -g base-index 1
set-window-option -g pane-base-index 1

# re-enable pbcopy/pbpaste
set-option -g default-command "/usr/local/bin/reattach-to-user-namespace -l zsh"

# renumber windows
set-option -g renumber-windows on

# Maximize / Minize pane (in new window)
unbind +
bind + new-window -d -n tmux-zoom \; swap-pane -s tmux-zoom.1 \; select-window -t tmux-zoom
unbind -
bind - last-window \; swap-pane -s tmux-zoom.1 \; kill-window -t tmux-zoom

# open a cmd pane at the bottom of the window
bind z split-window -v -p25 -c "#{pane_current_path}"

# open new panes in the current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# clear history
unbind-key -n C-k
#bind -n C-k clear-history
set-option -g history-limit 5000

# act like vim
set-option -g status-keys vi
set-window-option -g mode-keys vi

# awesome copy paste
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind-key y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy\; tmux display 'Buffer copied'"

# open urls in current buffer (hott)
bind-key U capture-pane \; save-buffer /tmp/tmux-buffer \; split-window -l 10 "urlview /tmp/tmux-buffer"
# open ips in current buffer (hott)
bind-key I capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "tmux choose-list -l `cat /tmp/tmux-buffer | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort -u | tr \"\\n\" \",\"` \"set-buffer %%\""

# vim bindings for pane selection
unbind-key l
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# move windows
bind-key m command-prompt -p "move window to:"  "swap-window -t '%%'"

setw -g monitor-activity on

# colors
set-window-option -g window-status-bg             colour3
set-window-option -g status-fg                    colour0
set-window-option -g window-status-fg             colour0
set-window-option -g window-status-current-fg     colour0
set-window-option -g window-status-current-bg     colour9
set-window-option -g window-status-attr           dim
set-window-option -g status-attr                  bright
set-window-option -g window-status-current-attr   bright

set-window-option -g window-status-bell-bg        colour1
set-window-option -g window-status-content-bg     colour1
set-window-option -g window-status-activity-bg    colour1
set-window-option -g window-status-activity-fg    colour0
set-window-option -g window-status-content-fg     colour0
set-window-option -g window-status-bell-fg        colour0
set-window-option -g window-status-bell-attr      bright
set-window-option -g window-status-content-attr   bright
set-window-option -g window-status-activity-attr  bright

set-option -g pane-active-border-fg               colour3
set-window-option -g clock-mode-colour            colour3

set -g status-right-length 180
set -g status-interval 10
set -g status-right "#(~/tmux_current_track) ♥ #(pmset -g batt | awk 'NR==2 {gsub(/;/,\"\"\\); \
  print $2}') | %a %m-%d %I:%M "
#set -g status-right "batt: #(pmset -g batt | awk 'NR==2 {gsub(/;/,\"\"\\); \
#  print (match($3,/^ch/\\) ? \"\⚡\":\"\"\\) $2}') | %d %h | %I:%M "

# base03  colour8
# base02  colour0
# base01  colour12
# base00  colour11
# base0   colour12
# base1   colour14
# base2   colour7
# base3   colour15
# yellow  colour3
# orange  colour9
# red     colour1
# magenta colour5
# violet  colour13
# blue    colour4
# cyan    colour6
# green   colour2
