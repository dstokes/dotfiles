#!/bin/bash

ICON_MUSIC=♫

# date string
STATUS="$(date +"%a %d %I:%M") "

# weather
if [[ -f ~/.tmux.weather ]]; then
  NOW=$(date +%s)
  MOD=$(date -r ~/.tmux.weather +%s)
  if [[ $(( $NOW - $MOD )) -gt 900 ]]; then
    rm ~/.tmux.weather
  fi
else
  WOEID="12798399"
  URL='https://query.yahooapis.com/v1/public/yql?q=select%20item.condition%20from%20weather.forecast%20where%20woeid%20%3D%20'$WOEID'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys'
  read CODE DEGREES <<< $(curl -s "$URL" | jq -r '.query.results.channel.item.condition | .code + " " + .temp')
  case "$CODE" in
  9|1[0-2])  ICON="☂ ";;
  2[6-9]|30) ICON="☁ ";;
  3[2-4])    ICON="☀ ";;
  *)         ICON="";;
  esac
  echo "${DEGREES}°" > ~/.tmux.weather
fi
STATUS="$(cat ~/.tmux.weather) $STATUS"

# load
S_LOAD=$(uptime | awk '{print $(NF-1)}')
STATUS="$S_LOAD | $STATUS"

# battery percentage
S_BATT=$(pmset -g batt 2>&1 | awk -F ';' 'NR==2 {sub(/%/, "", $1); print $1;}' | cut -f2)
if [[ $S_BATT -lt 50 ]]; then
  STATUS="$S_BATT% | $STATUS"
fi

# current spotify track
S_ARTIST=$(osascript <<EOF
if application "Spotify" is running then
  tell application "Spotify"
    return artist of current track as string
  end tell
end if
EOF)
S_TRACK=$(osascript <<EOF
if application "Spotify" is running then
  tell application "Spotify"
    return name of current track as string
  end tell
end if
EOF)
if [[ -n "$S_ARTIST" ]]; then
  if [[ ${#S_ARTIST} -ge 30 ]]; then
    S_ARTIST="${S_ARTIST:0:23}.."
  fi
  if [[ ${#S_TRACK} -ge 30 ]]; then
    S_TRACK="${S_TRACK:0:23}.."
  fi
  STATUS="$ICON_MUSIC $S_ARTIST: $S_TRACK | $STATUS"
fi

printf "%s" "$STATUS"
